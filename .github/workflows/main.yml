# This is a basic workflow to help you get started with Actions

name: "pre-release"
on:
  push:
    branches: [ master ]

jobs:
  pre-release:
    name: "Pre Release"
    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - run: echo "ğŸ’¡ The ${{ github.repository }} repository has been cloned to the runner."

      - run: docker build -t mirageold .

      - run: docker run --name=mirageoldname mirageold

      - run: docker cp mirageoldname:/usr/src/mirageold/release/mirageold.apk mirageold.apk
      - run: docker cp mirageoldname:/usr/src/mirageold/release/desktop/mirageold-win32-x64.zip mirageold-win32-x64.zip
      - run: docker cp mirageoldname:/usr/src/mirageold/release/desktop/mirageold-linux-x64.zip mirageold-linux-x64.zip
  
      - name: get-npm-version
        id: package-version
        uses: "martinbeentjes/npm-get-version-action@master"


      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "beta."${{ steps.package-version.outputs.current-version}}
          files: |
            mirageold.apk
            mirageold-win32-x64.zip
            mirageold-linux-x64.zip


name: "tagged-release"
on:
  push:
    tags:
      - "v*"

jobs:
  tagged-release:
    name: "tagged release"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - run: echo "ğŸ’¡ The ${{ github.repository }} repository has been cloned to the runner."

      - run: docker build -t mirageold .
      - run: docker run --name=mirageoldname mirageold

      - run: docker cp mirageoldname:/usr/src/mirageold/release/mirageold.apk mirageold.apk
      - run: docker cp mirageoldname:/usr/src/mirageold/release/desktop/mirageold-win32-x64.zip mirageold-win32-x64.zip
      - run: docker cp mirageoldname:/usr/src/mirageold/release/desktop/mirageold-linux-x64.zip mirageold-linux-x64.zip
  
      - name: get-npm-version
        id: package-version
        uses: "martinbeentjes/npm-get-version-action@master"

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          title: ${{ steps.package-version.outputs.current-version}}
          files: |
            mirageold.apk
            mirageold-win32-x64.zip
            mirageold-linux-x64.zip